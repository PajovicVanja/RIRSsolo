name: Backend CI/CD

on:
  push:
    branches:
      - main
      - production
  pull_request:
    branches:
      - main
      - production

jobs:
  build-and-cache:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Cache node_modules
      uses: actions/cache@v3
      with:
        path: backend/node_modules
        key: ${{ runner.os }}-backend-${{ hashFiles('backend/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-backend-
    - name: Install dependencies
      run: |
        cd backend
        npm ci
    - name: Build backend
      run: |
        cd backend
        npm run build
    - name: Store build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: backend-build
        path: backend/dist/

  deploy-to-development:
    runs-on: ubuntu-latest
    needs: build-and-cache
    if: github.ref == 'refs/heads/main'
    environment:
      name: Development

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and tag Docker image
      run: |
        docker buildx build \
          --tag ${{ secrets.DOCKER_USERNAME }}/company-vehicle-management:dev \
          --file Dockerfile.dockerhub \
          --push \
          .

  deploy-to-production:
    runs-on: ubuntu-latest
    needs: build-and-cache
    if: github.ref == 'refs/heads/production'
    environment:
      name: Production
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and tag Docker image
      run: |
        docker buildx build \
          --tag ${{ secrets.DOCKER_USERNAME }}/company-vehicle-management:prod \
          --file Dockerfile.dockerhub \
          --push \
          .

    - name: Manual approval required
      if: ${{ github.event_name == 'push' }}
      run: echo "Waiting for manual approval before deployment"

    - name: Trigger Render deploy
      env:
        RENDER_DEPLOY_HOOK: ${{ secrets.RENDER_DEPLOY_HOOK }}
      run: |
        echo "Triggering Render deploy using hook: $RENDER_DEPLOY_HOOK"
        curl -v -X POST $RENDER_DEPLOY_HOOK
