name: Frontend CI/CD

on:
  push:
    branches:
      - main
      - production
  pull_request:
    branches:
      - main
      - production

jobs:
  build-and-deploy-frontend:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Cache frontend node_modules
      uses: actions/cache@v3
      with:
        path: frontend/node_modules
        key: ${{ runner.os }}-frontend-${{ hashFiles('frontend/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-frontend-

    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci

    - name: Build frontend
      run: |
        cd frontend
        npm run build

    - name: Store frontend build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: frontend/build/

    - name: Run tests with coverage
      run: |
        cd frontend
        npm test -- --coverage

    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: frontend-coverage
        path: frontend/coverage/

  deploy-to-development:
    runs-on: ubuntu-latest
    needs: build-and-deploy-frontend
    if: github.ref == 'refs/heads/main'
    environment:
      name: Development

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and tag Docker image
      run: |
        docker buildx build \
          --tag ${{ secrets.DOCKER_USERNAME }}/frontend:dev \
          --file Dockerfile.frontend \
          --push \
          .

  deploy-to-production:
    runs-on: ubuntu-latest
    needs: build-and-deploy-frontend
    if: github.ref == 'refs/heads/production'
    environment:
      name: Production

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and tag Docker image
      run: |
        docker buildx build \
          --tag ${{ secrets.DOCKER_USERNAME }}/frontend:prod \
          --file Dockerfile.frontend \
          --push \
          .

    - name: Manual approval required
      uses: hmarr/auto-approve-action@v2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
