name: Frontend CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  checkout-code:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

  setup-node:
    runs-on: ubuntu-latest
    needs: checkout-code
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

  cache-dependencies:
    runs-on: ubuntu-latest
    needs: setup-node
    steps:
      - name: Cache frontend node_modules
        uses: actions/cache@v3
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-frontend-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-frontend-

  install-dependencies:
    runs-on: ubuntu-latest
    needs: cache-dependencies
    steps:
      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci

  build-frontend:
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - name: Build frontend
        run: |
          cd frontend
          npm run build

  store-artifacts:
    runs-on: ubuntu-latest
    needs: build-frontend
    steps:
      - name: Store frontend build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/build/

  list-build-contents:
    runs-on: ubuntu-latest
    needs: store-artifacts
    steps:
      - name: List build directory contents
        run: |
          ls -la frontend/build

  run-tests:
    runs-on: ubuntu-latest
    needs: list-build-contents
    steps:
      - name: Run tests with coverage
        run: |
          cd frontend
          npm test -- --coverage

  upload-coverage:
    runs-on: ubuntu-latest
    needs: run-tests
    steps:
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: frontend/coverage/

  deploy:
    runs-on: ubuntu-latest
    needs: upload-coverage
    steps:
      - name: Deploy to Firebase Hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: |
          cd frontend
          npm install -g firebase-tools
          firebase deploy --only hosting --token $FIREBASE_TOKEN
